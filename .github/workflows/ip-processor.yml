name: IP Processor and Upload Workflow

on:
  schedule:
    - cron: "0 */12 * * *"
  workflow_dispatch:

jobs:
  process:
    runs-on: ubuntu-latest

    env:
      CF_DOMAIN: ${{ secrets.CF_DOMAIN }}
      CF_TOKEN: ${{ secrets.CF_TOKEN }}
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
      WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
      WEBDAV_USERNAME: ${{ secrets.WEBDAV_USERNAME }}
      WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # 更新到 v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install configparser requests tqdm ipaddress
        fi

    - name: Create directories
      run: |
        mkdir -p ips output

    - name: Run ip_processor.py
      run: |
        python ip_processor.py

    - name: Check output files
      run: |
        echo "=== 输出文件检查 ==="
        ls -la output/
        if [ -z "$(ls -A output/)" ]; then
          echo "警告: output 目录为空"
        else
          echo "找到的文件:"
          ls output/
        fi

    - name: Run Cloudflare KV Upload Script
      if: env.CF_DOMAIN != '' && env.CF_TOKEN != ''
      run: |
        chmod +x cloudflare_kv_upload.sh
        ./cloudflare_kv_upload.sh

    - name: Run WebDAV Upload Script
      if: env.WEBDAV_URL != '' && env.WEBDAV_USERNAME != '' && env.WEBDAV_PASSWORD != ''
      run: |
        chmod +x webdav_upload.sh
        ./webdav_upload.sh

    - name: Upload output as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ip-processor-results
        path: output/
        retention-days: 7
        if-no-files-found: warn
